name: Workflows generated by the MVS plan
on:
  workflow_dispatch:
    inputs:
       client_payload:
          description: The Client payload
          required: true
jobs:
  secret-detection:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'secret-detection'
    runs-on: ubuntu-20.04
    steps:
    - name: secrets-detection
      uses: jitsecurity-controls/jit-github-action@v1.7
      with:
        docker_user: jit-bot
        docker_password: ${{fromJSON(github.event.inputs.client_payload).payload.container_registry_token}}
        security_control: ghcr.io/jitsecurity-controls/control-gitleaks-alpine:main
        security_control_args: detect --config \$GITLEAKS_CONFIG_FILE_PATH --source \${WORK_DIR:-.} -v --report-format json --report-path \$REPORT_FILE --redact --no-git --exit-code 0
        security_control_output_file: /tmp/report.json
        dispatch_type: workflow

  static-code-analysis-python:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'static-code-analysis-python'
    runs-on: ubuntu-20.04
    steps:
    - name: python-code-scanning
      uses: jitsecurity-controls/jit-github-action@v1.7
      with:
        docker_user: jit-bot
        docker_password: ${{fromJSON(github.event.inputs.client_payload).payload.container_registry_token}}
        security_control: ghcr.io/jitsecurity-controls/control-bandit-slim:main
        security_control_args: -r \${WORK_DIR:-.} -f json -q -lll -iii
        
        dispatch_type: workflow

  static-code-analysis-js:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'static-code-analysis-js'
    runs-on: ubuntu-20.04
    steps:
    - name: semgrep-code-scanning
      uses: jitsecurity-controls/jit-github-action@v1.7
      with:
        docker_user: jit-bot
        docker_password: ${{fromJSON(github.event.inputs.client_payload).payload.container_registry_token}}
        security_control: ghcr.io/jitsecurity-controls/control-semgrep-alpine:main
        security_control_args: --json --config=/semgrep-config.yml --metrics=off --severity=ERROR \${WORK_DIR:-.}
        
        dispatch_type: workflow

  static-code-analysis-go:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'static-code-analysis-go'
    runs-on: ubuntu-20.04
    steps:
    - name: golang-code-scanning
      uses: jitsecurity-controls/jit-github-action@v1.7
      with:
        docker_user: jit-bot
        docker_password: ${{fromJSON(github.event.inputs.client_payload).payload.container_registry_token}}
        security_control: ghcr.io/jitsecurity-controls/control-gosec-alpine:main
        security_control_args: -fmt=json -severity=high \${WORK_DIR:-.}/...
        
        dispatch_type: workflow
